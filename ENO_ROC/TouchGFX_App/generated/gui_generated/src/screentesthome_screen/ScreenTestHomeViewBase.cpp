/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screentesthome_screen/ScreenTestHomeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenTestHomeViewBase::ScreenTestHomeViewBase()
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 320, 240);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box1);

    button3.setXY(240, 216);
    button3.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button3);

    button2.setXY(160, 216);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button2);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_EC_SPLASH_320X240_COLOUR_DARK_ON_WHITE_ID));
    scalableImage1.setPosition(0, 0, 320, 216);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    textVersion.setPosition(10, 178, 300, 24);
    textVersion.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textVersion.setLinespacing(0);
    Unicode::snprintf(textVersionBuffer, TEXTVERSION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8HN7).getText());
    textVersion.setWildcard(textVersionBuffer);
    textVersion.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DDD1));
    add(textVersion);

    button0.setXY(0, 216);
    button0.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button0);

    button1.setXY(80, 216);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID));
    add(button1);

    textArea3.setXY(175, 219);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8D9K));
    add(textArea3);

    textArea3_1.setXY(264, 219);
    textArea3_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3_1.setLinespacing(0);
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LLVS));
    add(textArea3_1);

    textArea2.setXY(89, 219);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8CI));
    add(textArea2);

    textArea1.setXY(23, 219);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UBAI));
    add(textArea1);
}

ScreenTestHomeViewBase::~ScreenTestHomeViewBase()
{

}

void ScreenTestHomeViewBase::setupScreen()
{

}

void ScreenTestHomeViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
    {
        //handle_button_press_0
        //When hardware button 0 clicked call buttonHandler on ScreenTestHome
        //Call buttonHandler
        buttonHandler(0);
    
    }

    if(1 == key)
    {
        //handle_button_press_1
        //When hardware button 1 clicked call buttonHandler on ScreenTestHome
        //Call buttonHandler
        buttonHandler(1);
    
    }

    if(2 == key)
    {
        //handle_button_press_2
        //When hardware button 2 clicked call buttonHandler on ScreenTestHome
        //Call buttonHandler
        buttonHandler(2);
    
    }

    if(3 == key)
    {
        //handle_button_press_3
        //When hardware button 3 clicked call buttonHandler on ScreenTestHome
        //Call buttonHandler
        buttonHandler(3);
    
    }
}

void ScreenTestHomeViewBase::GoToCANtestScreen()
{
    //Go_to_CAN_screen
    //When GoToCANtestScreen is called change screen to ScreenCANtest
    //Go to ScreenCANtest with no screen transition
    application().gotoScreenCANtestScreenNoTransition();
}

void ScreenTestHomeViewBase::GoToOutputsTestScreen()
{
    //Go_to_Outputs_screen
    //When GoToOutputsTestScreen is called change screen to ScreenOutputsTest
    //Go to ScreenOutputsTest with no screen transition
    application().gotoScreenOutputsTestScreenNoTransition();
}

void ScreenTestHomeViewBase::GoToInputsTestScreen()
{
    //Go_to_Inputs_screen
    //When GoToInputsTestScreen is called change screen to ScreenInputsTest
    //Go to ScreenInputsTest with no screen transition
    application().gotoScreenInputsTestScreenNoTransition();
}

void ScreenTestHomeViewBase::GoToHomeScreen()
{
    //Go_to_Home_screen
    //When GoToHomeScreen is called change screen to ScreenTestHome
    //Go to ScreenTestHome with no screen transition
    application().gotoScreenTestHomeScreenNoTransition();
}

void ScreenTestHomeViewBase::GoToLCDtestScreen()
{
    //Go_to_LCD_screen
    //When GoToLCDtestScreen is called change screen to ScreenLCDtest
    //Go to ScreenLCDtest with no screen transition
    application().gotoScreenLCDtestScreenNoTransition();
}

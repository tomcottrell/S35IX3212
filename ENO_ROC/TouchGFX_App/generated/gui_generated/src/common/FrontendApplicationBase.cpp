/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include<platform/driver/lcd/LCD24bpp.hpp>
#include <gui/screentesthome_screen/ScreenTestHomeView.hpp>
#include <gui/screentesthome_screen/ScreenTestHomePresenter.hpp>
#include <gui/screencantest_screen/ScreenCANtestView.hpp>
#include <gui/screencantest_screen/ScreenCANtestPresenter.hpp>
#include <gui/screeninputstest_screen/ScreenInputsTestView.hpp>
#include <gui/screeninputstest_screen/ScreenInputsTestPresenter.hpp>
#include <gui/screenoutputstest_screen/ScreenOutputsTestView.hpp>
#include <gui/screenoutputstest_screen/ScreenOutputsTestPresenter.hpp>
#include <gui/screensystem_screen/ScreenSystemView.hpp>
#include <gui/screensystem_screen/ScreenSystemPresenter.hpp>
#include <gui/screenlcdtest_screen/ScreenLCDtestView.hpp>
#include <gui/screenlcdtest_screen/ScreenLCDtestPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperRGB888();
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperARGB8888();
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
}

/*
 * Screen Transition Declarations
 */

// ScreenTestHome

void FrontendApplicationBase::gotoScreenTestHomeScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreenTestHomeScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenTestHomeScreenNoTransitionImpl()
{
    touchgfx::makeTransition<ScreenTestHomeView, ScreenTestHomePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ScreenCANtest

void FrontendApplicationBase::gotoScreenCANtestScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreenCANtestScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenCANtestScreenNoTransitionImpl()
{
    touchgfx::makeTransition<ScreenCANtestView, ScreenCANtestPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ScreenInputsTest

void FrontendApplicationBase::gotoScreenInputsTestScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreenInputsTestScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenInputsTestScreenNoTransitionImpl()
{
    touchgfx::makeTransition<ScreenInputsTestView, ScreenInputsTestPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ScreenOutputsTest

void FrontendApplicationBase::gotoScreenOutputsTestScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreenOutputsTestScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenOutputsTestScreenNoTransitionImpl()
{
    touchgfx::makeTransition<ScreenOutputsTestView, ScreenOutputsTestPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// ScreenLCDtest

void FrontendApplicationBase::gotoScreenLCDtestScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreenLCDtestScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenLCDtestScreenNoTransitionImpl()
{
    touchgfx::makeTransition<ScreenLCDtestView, ScreenLCDtestPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

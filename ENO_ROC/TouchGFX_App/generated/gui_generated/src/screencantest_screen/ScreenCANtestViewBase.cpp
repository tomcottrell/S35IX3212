/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screencantest_screen/ScreenCANtestViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenCANtestViewBase::ScreenCANtestViewBase()
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 320, 240);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box1);

    button0.setXY(0, 216);
    button0.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_LIGHT_GREY_ID));
    add(button0);

    button1.setXY(80, 216);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_LIGHT_GREY_ID));
    add(button1);

    button2.setXY(160, 216);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_LIGHT_GREY_ID));
    add(button2);

    button3.setXY(240, 216);
    button3.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_GREY_ID), touchgfx::Bitmap(BITMAP_BUTTON_LIGHT_GREY_ID));
    add(button3);

    textArea1.setXY(21, 219);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T5SL));
    add(textArea1);

    textArea1_1.setXY(104, 219);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1XYQ));
    add(textArea1_1);

    textArea1_1_1.setXY(182, 219);
    textArea1_1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_1_1.setLinespacing(0);
    textArea1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_28RV));
    add(textArea1_1_1);

    boxWithBorder1.setPosition(0, 0, 160, 75);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(180, 180, 180));
    boxWithBorder1.setBorderSize(5);
    add(boxWithBorder1);

    boxWithBorder1_1.setPosition(160, 0, 160, 75);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFromRGB(180, 180, 180));
    boxWithBorder1_1.setBorderSize(5);
    add(boxWithBorder1_1);

    boxWithBorder1_2.setPosition(0, 75, 160, 75);
    boxWithBorder1_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_2.setBorderColor(touchgfx::Color::getColorFromRGB(180, 180, 180));
    boxWithBorder1_2.setBorderSize(5);
    add(boxWithBorder1_2);

    boxWithBorder1_3.setPosition(160, 75, 160, 75);
    boxWithBorder1_3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_3.setBorderColor(touchgfx::Color::getColorFromRGB(180, 180, 180));
    boxWithBorder1_3.setBorderSize(5);
    add(boxWithBorder1_3);

    textArea_gauge_title1.setXY(8, 6);
    textArea_gauge_title1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_gauge_title1.setLinespacing(0);
    textArea_gauge_title1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UY1Z));
    add(textArea_gauge_title1);

    textArea_gauge_title2.setXY(169, 6);
    textArea_gauge_title2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_gauge_title2.setLinespacing(0);
    textArea_gauge_title2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_URUP));
    add(textArea_gauge_title2);

    textArea_gauge_title3.setXY(8, 81);
    textArea_gauge_title3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_gauge_title3.setLinespacing(0);
    textArea_gauge_title3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RED8));
    add(textArea_gauge_title3);

    textArea_gauge_title4.setXY(169, 81);
    textArea_gauge_title4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_gauge_title4.setLinespacing(0);
    textArea_gauge_title4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IGUN));
    add(textArea_gauge_title4);

    textEngineLoad.setPosition(190, 100, 100, 24);
    textEngineLoad.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textEngineLoad.setLinespacing(0);
    Unicode::snprintf(textEngineLoadBuffer, TEXTENGINELOAD_SIZE, "%s", touchgfx::TypedText(T_GAUGE_VALUE1).getText());
    textEngineLoad.setWildcard(textEngineLoadBuffer);
    textEngineLoad.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z4X4));
    add(textEngineLoad);

    textCoolantTemp.setPosition(30, 100, 100, 24);
    textCoolantTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textCoolantTemp.setLinespacing(0);
    Unicode::snprintf(textCoolantTempBuffer, TEXTCOOLANTTEMP_SIZE, "%s", touchgfx::TypedText(T_GAUGE_VALUE1).getText());
    textCoolantTemp.setWildcard(textCoolantTempBuffer);
    textCoolantTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3M96));
    add(textCoolantTemp);

    textEngineOilPressure.setPosition(190, 24, 100, 24);
    textEngineOilPressure.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textEngineOilPressure.setLinespacing(0);
    Unicode::snprintf(textEngineOilPressureBuffer, TEXTENGINEOILPRESSURE_SIZE, "%s", touchgfx::TypedText(T_GAUGE_VALUE1).getText());
    textEngineOilPressure.setWildcard(textEngineOilPressureBuffer);
    textEngineOilPressure.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QKNQ));
    add(textEngineOilPressure);

    textEngSpeed.setPosition(30, 25, 100, 24);
    textEngSpeed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textEngSpeed.setLinespacing(0);
    Unicode::snprintf(textEngSpeedBuffer, TEXTENGSPEED_SIZE, "%s", touchgfx::TypedText(T_GAUGE_VALUE1).getText());
    textEngSpeed.setWildcard(textEngSpeedBuffer);
    textEngSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LPJS));
    add(textEngSpeed);

    imageProgressEngineSpeed.setXY(30, 56);
    imageProgressEngineSpeed.setProgressIndicatorPosition(0, 0, 100, 10);
    imageProgressEngineSpeed.setRange(0, 3000);
    imageProgressEngineSpeed.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    imageProgressEngineSpeed.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_IMAGEPROGRESS_PLAIN_NORMAL_TINY_ID));
    imageProgressEngineSpeed.setBitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_IMAGEPROGRESS_PLAIN_NORMAL_TINY_ACTION_ID);
    imageProgressEngineSpeed.setValue(0);
    imageProgressEngineSpeed.setAnchorAtZero(false);
    add(imageProgressEngineSpeed);

    imageProgressEngineOilPressure.setXY(190, 56);
    imageProgressEngineOilPressure.setProgressIndicatorPosition(0, 0, 100, 10);
    imageProgressEngineOilPressure.setRange(0, 1000);
    imageProgressEngineOilPressure.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    imageProgressEngineOilPressure.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_IMAGEPROGRESS_PLAIN_NORMAL_TINY_ID));
    imageProgressEngineOilPressure.setBitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_IMAGEPROGRESS_PLAIN_NORMAL_TINY_ACTION_ID);
    imageProgressEngineOilPressure.setValue(0);
    imageProgressEngineOilPressure.setAnchorAtZero(false);
    add(imageProgressEngineOilPressure);

    imageProgressCoolantTemp.setXY(30, 130);
    imageProgressCoolantTemp.setProgressIndicatorPosition(0, 0, 100, 10);
    imageProgressCoolantTemp.setRange(0, 250);
    imageProgressCoolantTemp.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    imageProgressCoolantTemp.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_IMAGEPROGRESS_PLAIN_NORMAL_TINY_ID));
    imageProgressCoolantTemp.setBitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_IMAGEPROGRESS_PLAIN_NORMAL_TINY_ACTION_ID);
    imageProgressCoolantTemp.setValue(0);
    imageProgressCoolantTemp.setAnchorAtZero(false);
    add(imageProgressCoolantTemp);

    imageProgressEngineLoad.setXY(190, 130);
    imageProgressEngineLoad.setProgressIndicatorPosition(0, 0, 100, 10);
    imageProgressEngineLoad.setRange(0, 100);
    imageProgressEngineLoad.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    imageProgressEngineLoad.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_IMAGEPROGRESS_PLAIN_NORMAL_TINY_ID));
    imageProgressEngineLoad.setBitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_IMAGEPROGRESS_PLAIN_NORMAL_TINY_ACTION_ID);
    imageProgressEngineLoad.setValue(0);
    imageProgressEngineLoad.setAnchorAtZero(false);
    add(imageProgressEngineLoad);

    textRXcount.setXY(7, 157);
    textRXcount.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textRXcount.setLinespacing(0);
    Unicode::snprintf(textRXcountBuffer, TEXTRXCOUNT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OLB1).getText());
    textRXcount.setWildcard(textRXcountBuffer);
    textRXcount.resizeToCurrentText();
    textRXcount.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RNH2));
    add(textRXcount);

    textTXcount.setXY(7, 176);
    textTXcount.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textTXcount.setLinespacing(0);
    Unicode::snprintf(textTXcountBuffer, TEXTTXCOUNT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1LDW).getText());
    textTXcount.setWildcard(textTXcountBuffer);
    textTXcount.resizeToCurrentText();
    textTXcount.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E5F3));
    add(textTXcount);

    textTotalCount.setXY(21, 195);
    textTotalCount.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textTotalCount.setLinespacing(0);
    Unicode::snprintf(textTotalCountBuffer, TEXTTOTALCOUNT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8NRO).getText());
    textTotalCount.setWildcard(textTotalCountBuffer);
    textTotalCount.resizeToCurrentText();
    textTotalCount.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z842));
    add(textTotalCount);
}

ScreenCANtestViewBase::~ScreenCANtestViewBase()
{

}

void ScreenCANtestViewBase::setupScreen()
{

}

void ScreenCANtestViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
    {
        //handle_button_press_0
        //When hardware button 0 clicked call buttonHandler on ScreenCANtest
        //Call buttonHandler
        buttonHandler(0);
    
    }

    if(1 == key)
    {
        //handle_button_press_1
        //When hardware button 1 clicked call buttonHandler on ScreenCANtest
        //Call buttonHandler
        buttonHandler(1);
    
    }
}

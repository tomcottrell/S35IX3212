/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENINPUTSTESTVIEWBASE_HPP
#define SCREENINPUTSTESTVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screeninputstest_screen/ScreenInputsTestPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class ScreenInputsTestViewBase : public touchgfx::View<ScreenInputsTestPresenter>
{
public:
    ScreenInputsTestViewBase();
    virtual ~ScreenInputsTestViewBase();
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Custom Actions
     */
    virtual void buttonHandler(uint8_t value)
    {
        // Override and implement this function in Screen1
    }
    

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Button button2;
    touchgfx::Button button3;
    touchgfx::Button button0;
    touchgfx::Button button1;
    touchgfx::TextArea textExit;
    touchgfx::TextArea textInput1;
    touchgfx::TextArea textInput1_1;
    touchgfx::TextAreaWithOneWildcard textConfig1;
    touchgfx::TextAreaWithOneWildcard textConfig2;
    touchgfx::TextAreaWithOneWildcard textValue1;
    touchgfx::TextAreaWithOneWildcard textValue2;
    touchgfx::TextAreaWithOneWildcard textSupplyVoltage;
    touchgfx::TextAreaWithOneWildcard textFrequency;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTCONFIG1_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textConfig1Buffer[TEXTCONFIG1_SIZE];
    static const uint16_t TEXTCONFIG2_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textConfig2Buffer[TEXTCONFIG2_SIZE];
    static const uint16_t TEXTVALUE1_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textValue1Buffer[TEXTVALUE1_SIZE];
    static const uint16_t TEXTVALUE2_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textValue2Buffer[TEXTVALUE2_SIZE];
    static const uint16_t TEXTSUPPLYVOLTAGE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textSupplyVoltageBuffer[TEXTSUPPLYVOLTAGE_SIZE];
    static const uint16_t TEXTFREQUENCY_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textFrequencyBuffer[TEXTFREQUENCY_SIZE];

private:

};

#endif // SCREENINPUTSTESTVIEWBASE_HPP
